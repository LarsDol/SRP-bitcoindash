{
  "name": "goxstream",
  "description": "A node.js readable stream for mtgox. Uses raw websocket!",
  "keywords": [
    "mtgox",
    "stream",
    "bitcoin"
  ],
  "version": "0.1.0",
  "author": {
    "name": "Lars-Magnus Skog",
    "email": "lars.magnus.skog@gmail.com"
  },
  "repository": {
    "url": "git://github.com/ralphtheninja/goxstream.git"
  },
  "main": "index.js",
  "scripts": {
    "test": "tap --stderr ./test/*.js"
  },
  "dependencies": {
    "ws": "git://github.com/ralphtheninja/ws.git",
    "readable-stream": "1.0.2",
    "xtend": "2.0.3"
  },
  "devDependencies": {
    "tap": "~0.4.0"
  },
  "engines": {
    "node": ">=0.8"
  },
  "license": "MIT",
  "readme": "# goxstream\n\nA node.js readable stream for mtgox, based on [ws](https://github.com/einaros/ws). Reports ticker, depth, trade and lag data in real time. Supports the [bitcoin](http://bitcoin.org) (BTC) channels from this [list](https://mtgox.com/api/2/stream/list_public). [Namecoin](http://namecoin.info) (NMC) and [litecoin](http://litecoin.org) (LTC) are currently not traded on MtGox but might be in a near future.\n\n## API\n\n### goxstream.createStream([options])\n\nCreates and returns a readable <i>object</i> stream. The options argument configures what type of data you are interested in and uses the following properties:\n\n* <b>currency</b> `(string)` E.g `'USD'`, `'EUR'` etc. Default is `'USD'`.\n* <b>ticker</b> `(Boolean)` Stream ticker data. Default is `true`.\n* <b>depth</b> `(Boolean)` Stream depth data, i.e. buys and sells on the market. Default is `false`.\n* <b>trade</b> `(Boolean)` Stream trade data, i.e. actual transactions between buyers and sellers. Default is `false`.\n* <b>lag</b> `(Boolean)` Stream lag data. Default is `false`.\n\n### goxstream.currencies()\n\nReturns an array of currencies that are available on MtGox.\n\n## Examples\n\nPipe `'USD'` ticker data to stdout:\n\n```js\nvar gox = require('goxstream')\ngox.createStream().pipe(process.stdout)\n```\n\nPipe `'EUR'` depth data to file:\n\n```js\nvar gox = require('goxstream')\nvar fs  = require('fs')\nvar options = { currency: 'EUR', ticker: false, depth: true }\ngox.createStream(options).pipe(fs.createWriteStream('./EUR'))\n```\n\n## JSON Format\n\nHere's a brief summary on the different json blobs.\n\n### ticker object\n\nAll objects under `'ticker'` have the same properties as `'high'`, e.g. `'value'`, `'value_int'` etc\n\n```js\n{\n    \"channel\": \"d5f06780-30a8-4a48-a2f8-7ed181b4a13f\"\n  , \"channel_name\": \"ticker.BTCUSD\"\n  , \"op\": \"private\"\n  , \"origin\": \"broadcast\"\n  , \"private\": \"ticker\"\n  , \"ticker\": {\n        \"high\": {\n            \"value\": \"115.84000\"\n          , \"value_int\": \"11584000\"\n          , \"display\": \"$115.84000\"\n          , \"display_short\": \"$115.84\"\n          , \"currency\": \"USD\"\n        }\n      , \"low\": {}\n      , \"avg\": {}\n      , \"vwap\": {}\n      , \"vol\": {}\n      , \"last_local\": {}\n      , \"last_orig\": {}\n      , \"last_all\": {}\n      , \"last\": {}\n      , \"buy\": {}\n      , \"sell\": {}\n      , \"item\": \"BTC\"\n      , \"now\": \"1368096380598414\"\n    }\n}\n```\n\n### depth object\n\n```js\n{\n    \"channel\": \"24e67e0d-1cad-4cc0-9e7a-f8523ef460fe\"\n  , \"channel_name\": \"depth.BTCUSD\"\n  , \"op\": \"private\"\n  , \"origin\": \"broadcast\"\n  , \"private\": \"depth\"\n  , \"depth\": {\n        \"price\": \"92\"\n      , \"type\": 2\n      , \"type_str\": \"bid\"\n      , \"volume\": \"14.28693815\"\n      , \"price_int\": \"9200000\"\n      , \"volume_int\": \"1428693815\"\n      , \"item\": \"BTC\"\n      , \"currency\": \"USD\"\n      , \"now\": \"1368097807984368\"\n      , \"total_volume_int\": \"84559126689\"\n    }\n}\n```\n\n### trade object\n\n```js\n{\n    \"channel\": \"dbf1dee9-4f2e-4a08-8cb7-748919a71b21\"\n  , \"channel_name\": \"trade.BTC\"\n  , \"op\": \"private\"\n  , \"origin\": \"broadcast\"\n  , \"private\": \"trade\"\n  , \"trade\": {\n        \"type\": \"trade\"\n      , \"date\": 1368098037\n      , \"amount\": 1.86011338\n      , \"price\": 111.09999\n      , \"tid\": \"1368098037413285\"\n      , \"amount_int\": \"186011338\"\n      , \"price_int\": \"11109999\"\n      , \"item\": \"BTC\"\n      , \"price_currency\": \"USD\"\n      , \"trade_type\": \"bid\"\n      , \"primary\": \"Y\"\n      , \"properties\": \"market\"\n    }\n}\n```\n\n### lag object\n\n```js\n{\n    \"channel\": \"85174711-be64-4de1-b783-0628995d7914\"\n  , \"channel_name\": \"trade.lag\"\n  , \"op\": \"private\"\n  , \"origin\": \"broadcast\"\n  , \"private\": \"lag\"\n  , \"lag\": {\n        \"qid\": \"26dc2324-e790-47e8-aef7-e0a1f0633589\"\n      , \"stamp\": \"1368098833428529\"\n      , \"age\":47058\n    }\n}\n```\n\n## License\nMIT",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/ralphtheninja/goxstream/issues"
  },
  "homepage": "https://github.com/ralphtheninja/goxstream",
  "_id": "goxstream@0.1.0",
  "dist": {
    "shasum": "fea5b207445d360d6c552a3c83cc529ce678c0dd"
  },
  "_from": "goxstream@*",
  "_resolved": "https://registry.npmjs.org/goxstream/-/goxstream-0.1.0.tgz"
}
